{"version":3,"sources":["webpack:///./src/pages/category.js","webpack:///./src/components/Seo/Seo.js","webpack:///./src/components/Seo/index.js","webpack:///./src/components/Article/Headline.js","webpack:///./src/components/Article/Article.js","webpack:///./src/components/Article/index.js","webpack:///./src/components/List/List.js","webpack:///./src/components/List/index.js"],"names":["CategoryPage","props","posts","data","edges","categories","forEach","edge","category","node","frontmatter","push","categoryList","key","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","Fragment","_layouts__WEBPACK_IMPORTED_MODULE_3__","Consumer","theme","_components_Article___WEBPACK_IMPORTED_MODULE_4__","className","styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default","dynamic","color","brand","primary","_components_Article_Headline__WEBPACK_IMPORTED_MODULE_5__","title","map","item","react_icons_fa___WEBPACK_IMPORTED_MODULE_1__","_components_List__WEBPACK_IMPORTED_MODULE_6__","id","_components_Seo__WEBPACK_IMPORTED_MODULE_7__","query","Seo","postTitle","postDescription","description","postCover","cover","postSlug","fields","slug","config","shortSiteTitle","siteTitle","siteDescription","image","siteUrl","childImageSharp","resize","src","siteImage","url","window","location","pathname","react_default","Helmet_default","htmlAttributes","lang","siteLanguage","prefix","name","content","property","authorTwitterAccount","__webpack_require__","d","__webpack_exports__","components_Seo_Seo","Headline","children","react__WEBPACK_IMPORTED_MODULE_1___default","font","size","xxl","space","stack","l","time","duration","long","weight","standard","xs","xl","Article","style_default","inset","default","text","maxWidth","tablet","desktop","components_Article_Article","List","m","s","lineHeight","_edge$node","gatsby_browser_entry","to","components_List_List"],"mappings":"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","file":"component---src-pages-category-js-c1f7fdfee4f84bb18e20.js","sourcesContent":["import { FaTag } from \"react-icons/fa/\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { ThemeContext } from \"../layouts\";\nimport Article from \"../components/Article/\";\nimport Headline from \"../components/Article/Headline\";\nimport List from \"../components/List\";\nimport Seo from \"../components/Seo\";\n\nconst CategoryPage = props => {\n  const {\n    data: {\n      posts: { edges: posts }\n    }\n  } = props;\n\n  // Create category list\n  const categories = {};\n  posts.forEach(edge => {\n    const {\n      node: {\n        frontmatter: { category }\n      }\n    } = edge;\n\n    if (category && category != null) {\n      if (!categories[category]) {\n        categories[category] = [];\n      }\n      categories[category].push(edge);\n    }\n  });\n\n  const categoryList = [];\n\n  for (var key in categories) {\n    categoryList.push([key, categories[key]]);\n  }\n\n  return (\n    <React.Fragment>\n      <ThemeContext.Consumer>\n        {theme => (\n          <Article theme={theme}>\n            <header>\n              <Headline title=\"Posts by categories\" theme={theme} />\n            </header>\n            {categoryList.map(item => (\n              <section key={item[0]}>\n                <h2>\n                  <FaTag /> {item[0]}\n                </h2>\n                <List edges={item[1]} theme={theme} />\n              </section>\n            ))}\n            {/* --- STYLES --- */}\n            <style jsx>{`\n              h2 {\n                margin: 0 0 0.5em;\n              }\n              h2 :global(svg) {\n                height: 0.8em;\n                fill: ${theme.color.brand.primary};\n              }\n            `}</style>\n          </Article>\n        )}\n      </ThemeContext.Consumer>\n\n      <Seo />\n    </React.Fragment>\n  );\n};\n\nCategoryPage.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default CategoryPage;\n\n//eslint-disable-next-line no-undef\nexport const query = graphql`\n  query PostsQuery {\n    posts: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//posts/[0-9]+.*--/\" } }\n      sort: { fields: [fields___prefix], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            prefix\n          }\n          frontmatter {\n            title\n            category\n            author\n            cover {\n              children {\n                ... on ImageSharp {\n                  fluid(maxWidth: 800, maxHeight: 360) {\n                    ...GatsbyImageSharpFluid_withWebp\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport config from \"../../../content/meta/config\";\r\n\r\nconst Seo = props => {\r\n  const { data } = props;\r\n  const postTitle = ((data || {}).frontmatter || {}).title;\r\n  const postDescription = ((data || {}).frontmatter || {}).description;\r\n  const postCover = ((data || {}).frontmatter || {}).cover;\r\n  const postSlug = ((data || {}).fields || {}).slug;\r\n\r\n  const title = postTitle ? `${postTitle} - ${config.shortSiteTitle}` : config.siteTitle;\r\n  const description = postDescription ? postDescription : config.siteDescription;\r\n  const image = postCover ? config.siteUrl + postCover.childImageSharp.resize.src : config.siteUrl + \"/\" + config.siteImage;\r\n  const url = postSlug ? config.siteUrl + postSlug : (typeof window !== 'undefined')  ? config.siteUrl + window.location.pathname : config.siteUrl;\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang: config.siteLanguage,\r\n        prefix: \"og: http://ogp.me/ns#\"\r\n      }}\r\n    >\r\n      {/* General tags */}\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n      {/* OpenGraph tags */}\r\n      <meta property=\"og:url\" content={url} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content={image} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      {/* Twitter Card tags */}\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={config.authorTwitterAccount ? config.authorTwitterAccount : \"\"}\r\n      />\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nSeo.propTypes = {\r\n  data: PropTypes.object,\r\n};\r\n\r\nexport default Seo;\r\n","export { default } from \"./Seo\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Headline = props => {\n  const { title, children, theme } = props;\n\n  return (\n    <React.Fragment>\n      {title ? <h1>{title}</h1> : <h1>{children}</h1>}\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        h1 {\n          font-size: ${theme.font.size.xxl};\n          margin: ${theme.space.stack.l};\n          animation-name: headlineEntry;\n          animation-duration: ${theme.time.duration.long};\n\n          :global(span) {\n            font-weight: ${theme.font.weight.standard};\n            display: block;\n            font-size: 0.5em;\n            letter-spacing: 0;\n            margin: ${theme.space.stack.xs};\n          }\n\n          :global(svg) {\n            height: 0.75em;\n            fill: ${theme.color.brand.primary};\n          }\n        }\n\n        @keyframes headlineEntry {\n          from {\n            opacity: 0.5;\n          }\n          to {\n            opacity: 1;\n          }\n        }\n\n        @from-width tablet {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.2)`};\n          }\n        }\n\n        @from-width desktop {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.4)`};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nHeadline.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Headline;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Article = props => {\n  const { children, theme } = props;\n\n  return (\n    <React.Fragment>\n      <article className=\"article\">{children}</article>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        .article {\n          padding: ${theme.space.inset.default};\n          margin: 0 auto;\n        }\n        @from-width tablet {\n          .article {\n            padding: ${`calc(${theme.space.default}) calc(${theme.space.default} * 2)`};\n            max-width: ${theme.text.maxWidth.tablet};\n          }\n        }\n        @from-width desktop {\n          .article {\n            padding: ${`calc(${theme.space.default} * 2 + 90px) 0 calc(${\n              theme.space.default\n            } * 2)`};\n            max-width: ${theme.text.maxWidth.desktop};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nArticle.propTypes = {\n  children: PropTypes.node.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Article;\n","export { default } from \"./Article\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nconst List = props => {\n  const { edges, theme } = props;\n\n  return (\n    <React.Fragment>\n      <ul>\n        {edges.map(edge => {\n          const {\n            node: {\n              frontmatter: { title },\n              fields: { slug }\n            }\n          } = edge;\n\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        ul {\n          margin: ${theme.space.stack.m};\n          padding: ${theme.space.m};\n          list-style: circle;\n        }\n        li {\n          padding: ${theme.space.xs} 0;\n          font-size: ${theme.font.size.s};\n          line-height: ${theme.font.lineHeight.l};\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nList.propTypes = {\n  edges: PropTypes.array.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default List;\n","export { default } from \"./List\";\n"],"sourceRoot":""}