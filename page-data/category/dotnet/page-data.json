{"componentChunkName":"component---src-templates-category-template-js","path":"/category/dotnet/","result":{"data":{"allMarkdownRemark":{"totalCount":4,"edges":[{"node":{"id":"225b1914-dceb-5824-b48d-e25d4915a784","fields":{"slug":"/load-balancing-perf/"},"excerpt":"Another episode on gaining performance improvements by doing the as little as possible on the hot-path.  Do all heavy-lifting upfront or in…","timeToRead":5,"frontmatter":{"title":"Randomized Round Robin (Load Balancing) as Fast as Possible","category":"dotnet"}}},{"node":{"id":"c97d6835-b7e8-5f74-bb57-48da0967f0b4","fields":{"slug":"/breaking-records-with-core-3-0/"},"excerpt":"It all started over 10 years ago when someone dared to ask ”how to convert a byte array to a hexadecimal string?” over at Stack Overflow…","timeToRead":7,"frontmatter":{"title":"Breaking all existing Hex Encoding Records with .NET Core 3.0","category":"dotnet"}}},{"node":{"id":"fe37bedf-5072-5280-a634-fbcaf6d89c8c","fields":{"slug":"/system-runtime-compilerservices-unsafe/"},"excerpt":"Before the introduction of ref returns and ref locals in C# 7.0 and following improvements such as conditional ref expressions in C# 7.2 and…","timeToRead":9,"frontmatter":{"title":"Unsafe array access and pointer arithmetics in C#","category":"dotnet"}}},{"node":{"id":"ab75163f-d8ca-596a-8711-d88fb62c3691","fields":{"slug":"/system-threading-channels/"},"excerpt":"The  namespace provides data structures (stores) for pub/sub scenarios. It enables you to decouple one-to-many publishers from one-to-many…","timeToRead":12,"frontmatter":{"title":"Exploring System.Threading.Channels","category":"dotnet"}}}]}},"pageContext":{"category":"dotnet"}}}