{"version":3,"sources":["webpack:///./src/components/Page/Page.js","webpack:///./src/templates/PageTemplate.js","webpack:///./src/components/Article/Bodytext.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.bold.js"],"names":["Page","props","page","html","title","frontmatter","theme","Fragment","Headline","Bodytext","PageTemplate","data","Consumer","Article","Seo","pageQuery","dangerouslySetInnerHTML","__html","time","duration","long","font","lineHeight","s","size","l","m","xxl","weight","bold","color","brand","primary","radius","default","line","space","neutral","gray","c","tiny","small","createHTML","this"],"mappings":"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","file":"component---src-templates-page-template-js-37b350a73e00806d6376.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Headline from \"../Article/Headline\";\nimport Bodytext from \"../Article/Bodytext\";\n\nconst Page = props => {\n  const {\n    page: {\n      html,\n      frontmatter: { title }\n    },\n    theme\n  } = props;\n\n  return (\n    <React.Fragment>\n      <header>\n        <Headline title={title} theme={theme} />\n      </header>\n      <Bodytext html={html} theme={theme} />\n    </React.Fragment>\n  );\n};\n\nPage.propTypes = {\n  page: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Page;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport Seo from \"../components/Seo\";\nimport Article from \"../components/Article\";\nimport Page from \"../components/Page\";\nimport { ThemeContext } from \"../layouts\";\n\nconst PageTemplate = props => {\n  const {\n    data: { page }\n  } = props;\n\n  return (\n    <React.Fragment>\n      <ThemeContext.Consumer>\n        {theme => (\n          <Article theme={theme}>\n            <Page page={page} theme={theme} />\n          </Article>\n        )}\n      </ThemeContext.Consumer>\n\n      <Seo data={page} />\n    </React.Fragment>\n  );\n};\n\nPageTemplate.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default PageTemplate;\n\n//eslint-disable-next-line no-undef\nexport const pageQuery = graphql`\n  query PageByPath($slug: String!) {\n    page: markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Bodytext = props => {\r\n  const { html, theme } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"bodytext\" dangerouslySetInnerHTML={{ __html: html }} />\r\n\r\n      <style jsx>{`\r\n        .bodytext {\r\n          animation-name: bodytextEntry;\r\n          animation-duration: ${theme.time.duration.long};\r\n\r\n          :global(h2),\r\n          :global(h3) {\r\n            margin: 1.5em 0 1em;\r\n          }\r\n\r\n          :global(h2) {\r\n            line-height: ${theme.font.lineHeight.s};\r\n            font-size: ${theme.font.size.l};\r\n          }\r\n\r\n          :global(h3) {\r\n            font-size: ${theme.font.size.m};\r\n            line-height: ${theme.font.lineHeight.m};\r\n          }\r\n\r\n          :global(p) {\r\n            font-size: ${theme.font.size.s};\r\n            line-height: ${theme.font.lineHeight.xxl};\r\n            margin: 0 0 1.5em;\r\n          }\r\n          :global(ul) {\r\n            list-style: circle;\r\n            margin: 0 0 1.5em;\r\n            padding: 0 0 0 1.5em;\r\n          }\r\n          :global(li) {\r\n            margin: 0.7em 0;\r\n            line-height: 1.5;\r\n            font-size: ${theme.font.size.s};\r\n          }\r\n          :global(a):not(.ant-btn) {\r\n            font-weight: ${theme.font.weight.bold};\r\n            color: ${theme.color.brand.primary};\r\n            text-decoration: underline;\r\n          }\r\n          :global(a.gatsby-resp-image-link) {\r\n            border: 0;\r\n            display: block;\r\n            margin: 2.5em 0;\r\n            border-radius: ${theme.size.radius.default};\r\n            overflow: hidden;\r\n            border: 1px solid ${theme.line.color};\r\n          }\r\n          :global(.gatsby-highlight) {\r\n            margin: 2.5em -${theme.space.m};\r\n            :global(pre) {\r\n              border-radius: 0;\r\n            }\r\n          }\r\n          :global(p > code),\r\n          :global(li > code) {\r\n            background: ${theme.color.neutral.gray.c};\r\n            text-shadow: none;\r\n            color: inherit;\r\n            padding: 0.1em 0.3em 0.2em;\r\n            border-radius: ${theme.size.radius.tiny};\r\n          }\r\n          :global(blockquote) {\r\n            padding-left: ${theme.space.m};\r\n            border-left: 5px solid #bbb;\r\n          }\r\n        }\r\n        @keyframes bodytextEntry {\r\n          from {\r\n            opacity: 0;\r\n          }\r\n          to {\r\n            opacity: 1;\r\n          }\r\n        }\r\n        @from-width tablet {\r\n          .bodytext {\r\n            :global(.gatsby-highlight) {\r\n              margin: 2.5em 0;\r\n              :global(pre) {\r\n                border-radius: ${theme.size.radius.small};\r\n              }\r\n            }\r\n          }\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nBodytext.propTypes = {\r\n  html: PropTypes.string.isRequired,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Bodytext;\r\n","'use strict';\n// B.2.3.5 String.prototype.bold()\nrequire('./_string-html')('bold', function (createHTML) {\n  return function bold() {\n    return createHTML(this, 'b', '', '');\n  };\n});\n"],"sourceRoot":""}