{"data":{"post":{"id":"75d36946-bf5a-52de-88ce-2cc84022ae33","html":"<p>The <code class=\"language-text\">System.Threading.Channels</code> namespace provides data structures (stores) for pub/sub scenarios. It enables you to decouple one-to-many publishers from one-to-many subscribers just as its equally named counterpart from <a href=\"https://tour.golang.org/concurrency/2\">go</a>.\nAt first glance, this might look similar to the functionality provided by <code class=\"language-text\">System.Threading.Task.Dataflow</code> (especially by <code class=\"language-text\">BufferBlock&lt;T&gt;</code>).\n<code class=\"language-text\">Channels</code>, however, are a more low-level primitive upon which libraries such as <code class=\"language-text\">Dataflow</code> can be built.\nIf the library was in development today, it would most certainly be based on <code class=\"language-text\">Channels</code>.</p>","fields":{"slug":"/initial-post/","prefix":"2017-10-21"},"frontmatter":{"title":"Exploring System.Threading.Channels","author":"nicolas portmann","category":"none","cover":{"childImageSharp":{"resize":{"src":"/static/c05f925825606e19a957283ac76dc0db/ada8c/photo-1465070845512-2b2dbdc6df66.jpg"}}}}},"authornote":{"id":"37e21f59-b45d-5bbb-87bd-acb76a2de5c3","html":"<p><strong>Nicolas Portmann</strong> About meâ€¦</p>"}},"pageContext":{"slug":"/initial-post/","source":"posts"}}